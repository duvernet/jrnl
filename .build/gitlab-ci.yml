# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip

before_script:
  - python -V  # Print out python version for debugging
  - pip install poetry

release:
  rules:
    - if: $RELEASE != null
  script:
    - git config --global user.email "jrnl.bot@gmail.com"
    - git config --global user.name "Jrnl Bot"
    - git remote set-url origin https://jrnl-bot:${GITHUB_TOKEN}@github.com/jrnl-org/jrnl.git
    - git fetch origin
    - git checkout "$CI_COMMIT_BRANCH"
    - git pull
    - poetry version "$RELEASE"
    - echo __version__ = \"$RELEASE\" > jrnl/__version__.py
    - git add pyproject.toml jrnl/__version__.py
    - git commit -m "Increment version to ${RELEASE}"
    - git status
    - git show HEAD
    - echo "$GITHUB_TOKEN"
    - git remote -v
    - git remote -v
    - git push origin $CI_COMMIT_BRANCH

